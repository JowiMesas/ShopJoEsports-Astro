---
import { getCollection } from "astro:content";
import Layout from "../../../layouts/Layout.astro";
import { initProductDetails } from "../../../scripts/product-details";

export async function getStaticPaths() {
    const allProducts = await Promise.all([
        getCollection('football'),
        getCollection('formula1'),
        getCollection('tennis')
    ]);

    const paths = allProducts.flat().map(product => ({
        params: {
            category: product.data.category,
            slug: product.slug
        },
        props: { product }
    }));

    return paths;
}

const {product} = Astro.props;
const categories = {
    'football': '‚öΩ F√∫tbol',
    'formula1' : 'üèéÔ∏è F√≥rmula 1',
    'tennis': 'üéæ Tenis'
}

// Determinar las im√°genes a mostrar
const productImages = product.data.images && product.data.images.length > 0 
    ? product.data.images 
    : [product.data.image];

// Verificaci√≥n de sizes
const availableSizes = product.data.sizes || [];
---

<Layout>
    <div class="container mx-auto px-6 py-8">
        <div class="grid md:grid-cols-2 gap-8 relative">
            <div class="relative h-[500px]">
                {productImages.map((image, index) => (
                    <img 
                        data-carousel-image
                        src={image} 
                        alt={`${product.data.name} - Image ${index + 1}`} 
                        loading="eager"
                        class={`
                            absolute top-0 left-0 w-full h-full object-cover rounded-lg shadow-lg transition-all duration-300
                            ${index === 0 ? 'opacity-100 z-10' : 'opacity-0 z-0'}
                        `}
                    />
                ))}
            </div>
            <div>
                <h1 class="text-3xl font-bold mb-4 text-secondary">{product.data.name}</h1>
                
                <p class="text-lg text-gray-500 mb-2">
                    {product.data.brand && `Marca: ${product.data.brand}`}
                </p>   
                
                <div>
                    {categories[product.data.category]}
                </div>
                
                <p class="text-gray-600 mb-4">
                    {product.data.description}
                </p>
                
                <div class="mb-4">
                    {product.data.discount ? (
                        <div>
                            <p class="text-gray-500 line-through">
                                Precio original: {product.data.price.toFixed(2)} ‚Ç¨
                            </p>
                            <p class="text-green-600 mb-2">
                                Descuento: {product.data.discount}%
                            </p>
                            <p class="text-2xl font-bold text-primary-light">
                                Precio actual: {(product.data.price * (1 - product.data.discount / 100)).toFixed(2)} ‚Ç¨
                            </p>
                        </div>
                    ) : (
                        <p class="text-2xl font-bold text-primary-light">
                            {product.data.price.toFixed(2)} ‚Ç¨
                        </p>
                    )}
                </div>
                
                {availableSizes.length > 0 && (
                    <div class="mb-4">
                        <label for="size-select" class="block font-semibold mb-2">Tallas: </label>
                        <select 
                            id="size-select" 
                            data-size-select
                            class="w-full px-3 py-2 border rounded"
                            required
                        >
                            <option value="">Selecciona una talla</option>
                            {availableSizes.map(size => (
                                <option value={size}>{size}</option>
                            ))}
                        </select>
                    </div>
                )}
                
                {product.data.colors && (
                    <div class="mt-4">
                        <h3 class="font-semibold mb-2">Colores Disponibles</h3>
                        <div class="flex space-x-2">
                            {product.data.colors.map((color, index) => (
                                <button 
                                    data-color={color}
                                    data-color-index={index}
                                    class="w-6 h-6 rounded-full border transition-all duration-300 hover:scale-110"
                                    style={`background-color: ${color}`}
                                >    
                                </button>
                            ))}
                        </div>
                    </div>
                )}
                
                <div class="flex items-center mb-4">
                    <span class="mr-2">Stock:</span>
                    <span class={`
                        ${product.data.stock > 10 ? 'text-green-600' : 
                          product.data.stock > 0 ? 'text-yellow-600' : 'text-red-600'}`}>
                         {product.data.stock}  unidades disponibles
                    </span>
                </div>
                
                <button 
                    id="add-to-cart"
                    disabled={true}
                    class="w-full py-3 px-6 rounded transition bg-gray-300 text-gray-500 cursor-not-allowed"
                >
                    A√±adir al Carrito
                </button>
            </div>
        </div>
    </div>

    <script>
        import { initProductDetails } from "../../../scripts/product-details";
        
        document.addEventListener('DOMContentLoaded', initProductDetails);
    </script>
</Layout>